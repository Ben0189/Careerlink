// <auto-generated />
using System;
using BlotzTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Career_link_webapi.Migrations
{
    [DbContext(typeof(CareerLinkDbContext))]
    [Migration("20240828010823_UpdateUserColumnAndSeedData")]
    partial class UpdateUserColumnAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Career_link_webapi.Data.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4248),
                            Description = "Looking for a software engineering job.",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4253),
                            UserId = 1
                        },
                        new
                        {
                            PostId = 2,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4257),
                            Description = "Excited about new opportunities in data science.",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4259),
                            UserId = 2
                        },
                        new
                        {
                            PostId = 3,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4262),
                            Description = "Interested in remote work positions.",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4264),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Career_link_webapi.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ContactNumber = 1234567890L,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(3998),
                            EmailName = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4057)
                        },
                        new
                        {
                            UserId = 2,
                            ContactNumber = 9876543210L,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4062),
                            EmailName = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4065)
                        },
                        new
                        {
                            UserId = 3,
                            ContactNumber = 5551234567L,
                            CreatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4069),
                            EmailName = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            UpdatedDate = new DateTime(2024, 8, 28, 11, 8, 22, 912, DateTimeKind.Local).AddTicks(4071)
                        });
                });

            modelBuilder.Entity("Career_link_webapi.Data.Entities.Post", b =>
                {
                    b.HasOne("Career_link_webapi.Data.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Career_link_webapi.Data.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
